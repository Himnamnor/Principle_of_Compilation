State 25 conflicts: 1 shift/reduce
State 30 conflicts: 1 shift/reduce
State 123 conflicts: 2 reduce/reduce
State 125 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: ExtDefList

    2 ExtDefList: ε
    3           | ExtDef ExtDefList

    4 ExtDef: Specifier FunDec CompSt
    5       | Specifier SEMI
    6       | Specifier ExtDecList SEMI
    7       | error SEMI

    8 ExtDecList: VarDec
    9           | VarDec COMMA ExtDecList

   10 Specifier: TYPE
   11          | StructSpecifier

   12 StructSpecifier: STRUCT Tag
   13                | STRUCT OptTag LC DefList RC

   14 OptTag: ε
   15       | ID

   16 Tag: ID

   17 VarDec: ID
   18       | VarDec LB INT RB

   19 FunDec: ID LP RP
   20       | ID LP VarList RP

   21 VarList: ParamDec COMMA VarList
   22        | ParamDec

   23 ParamDec: Specifier VarDec

   24 CompSt: LC DefList StmtList RC

   25 DefList: ε
   26        | Def DefList

   27 Def: Specifier DecList SEMI
   28    | error SEMI

   29 StmtList: ε
   30         | Stmt StmtList

   31 Stmt: Exp SEMI
   32     | CompSt
   33     | RETURN Exp SEMI
   34     | IF LP Exp RP Stmt
   35     | IF LP Exp RP Stmt ELSE Stmt
   36     | WHILE LP Exp RP Stmt
   37     | error SEMI

   38 DecList: Dec
   39        | Dec COMMA DecList

   40 Dec: VarDec
   41    | VarDec ASSIGNOP AssignmentExp

   42 PrimaryExp: ID
   43           | INT
   44           | FLOAT
   45           | LP Exp RP

   46 PostfixExp: PrimaryExp
   47           | PostfixExp LB AssignmentExp RB
   48           | ID LP RP
   49           | ID LP Args RP
   50           | PostfixExp DOT ID

   51 UnaryExp: PostfixExp
   52         | MINUS UnaryExp
   53         | NOT UnaryExp

   54 MultiplicativeExp: UnaryExp
   55                  | MultiplicativeExp STAR UnaryExp
   56                  | MultiplicativeExp DIV UnaryExp

   57 AdditiveExp: MultiplicativeExp
   58            | AdditiveExp PLUS MultiplicativeExp
   59            | AdditiveExp MINUS MultiplicativeExp

   60 RelationalExp: AdditiveExp
   61              | RelationalExp RELOP AdditiveExp

   62 LogicalAndExp: RelationalExp
   63              | LogicalAndExp AND RelationalExp

   64 LogicalOrExp: LogicalAndExp
   65             | LogicalOrExp OR LogicalAndExp

   66 AssignmentExp: LogicalOrExp
   67              | LogicalOrExp ASSIGNOP AssignmentExp

   68 Exp: AssignmentExp
   69    | Exp COMMA AssignmentExp

   70 Args: Exp COMMA Args
   71     | Exp


Terminals, with rules where they appear

    $end (0) 0
    error (256) 7 28 37
    INT <node> (258) 18 43
    FLOAT <node> (259) 44
    ID <node> (260) 15 16 17 19 20 42 48 49 50
    SEMI <node> (261) 5 6 7 27 28 31 33 37
    COMMA <node> (262) 9 21 39 69 70
    ASSIGNOP <node> (263) 41 67
    RELOP <node> (264) 61
    PLUS <node> (265) 58
    MINUS <node> (266) 52 59
    STAR <node> (267) 55
    DIV <node> (268) 56
    AND <node> (269) 63
    OR <node> (270) 65
    DOT <node> (271) 50
    NOT <node> (272) 53
    TYPE <node> (273) 10
    LP <node> (274) 19 20 34 35 36 45 48 49
    RP <node> (275) 19 20 34 35 36 45 48 49
    LB <node> (276) 18 47
    RB <node> (277) 18 47
    LC <node> (278) 13 24
    RC <node> (279) 13 24
    STRUCT <node> (280) 12 13
    RETURN <node> (281) 33
    IF <node> (282) 34 35
    ELSE <node> (283) 35
    WHILE <node> (284) 36
    UMINUS (285)
    LOWER_THAN_ELSE (286)


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    Program <node> (33)
        on left: 1
        on right: 0
    ExtDefList <node> (34)
        on left: 2 3
        on right: 1 3
    ExtDef <node> (35)
        on left: 4 5 6 7
        on right: 3
    ExtDecList <node> (36)
        on left: 8 9
        on right: 6 9
    Specifier <node> (37)
        on left: 10 11
        on right: 4 5 6 23 27
    StructSpecifier <node> (38)
        on left: 12 13
        on right: 11
    OptTag <node> (39)
        on left: 14 15
        on right: 13
    Tag <node> (40)
        on left: 16
        on right: 12
    VarDec <node> (41)
        on left: 17 18
        on right: 8 9 18 23 40 41
    FunDec <node> (42)
        on left: 19 20
        on right: 4
    VarList <node> (43)
        on left: 21 22
        on right: 20 21
    ParamDec <node> (44)
        on left: 23
        on right: 21 22
    CompSt <node> (45)
        on left: 24
        on right: 4 32
    DefList <node> (46)
        on left: 25 26
        on right: 13 24 26
    Def <node> (47)
        on left: 27 28
        on right: 26
    StmtList <node> (48)
        on left: 29 30
        on right: 24 30
    Stmt <node> (49)
        on left: 31 32 33 34 35 36 37
        on right: 30 34 35 36
    DecList <node> (50)
        on left: 38 39
        on right: 27 39
    Dec <node> (51)
        on left: 40 41
        on right: 38 39
    PrimaryExp <node> (52)
        on left: 42 43 44 45
        on right: 46
    PostfixExp <node> (53)
        on left: 46 47 48 49 50
        on right: 47 50 51
    UnaryExp <node> (54)
        on left: 51 52 53
        on right: 52 53 54 55 56
    MultiplicativeExp <node> (55)
        on left: 54 55 56
        on right: 55 56 57 58 59
    AdditiveExp <node> (56)
        on left: 57 58 59
        on right: 58 59 60 61
    RelationalExp <node> (57)
        on left: 60 61
        on right: 61 62 63
    LogicalAndExp <node> (58)
        on left: 62 63
        on right: 63 64 65
    LogicalOrExp <node> (59)
        on left: 64 65
        on right: 65 66 67
    AssignmentExp <node> (60)
        on left: 66 67
        on right: 41 47 67 68 69
    Exp <node> (61)
        on left: 68 69
        on right: 31 33 34 35 36 45 69 70 71
    Args <node> (62)
        on left: 70 71
        on right: 49 70


State 0

    0 $accept: • Program $end

    error   shift, and go to state 1
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    $end  reduce using rule 2 (ExtDefList)

    Program          go to state 4
    ExtDefList       go to state 5
    ExtDef           go to state 6
    Specifier        go to state 7
    StructSpecifier  go to state 8


State 1

    7 ExtDef: error • SEMI

    SEMI  shift, and go to state 9


State 2

   10 Specifier: TYPE •

    $default  reduce using rule 10 (Specifier)


State 3

   12 StructSpecifier: STRUCT • Tag
   13                | STRUCT • OptTag LC DefList RC

    ID  shift, and go to state 10

    $default  reduce using rule 14 (OptTag)

    OptTag  go to state 11
    Tag     go to state 12


State 4

    0 $accept: Program • $end

    $end  shift, and go to state 13


State 5

    1 Program: ExtDefList •

    $default  reduce using rule 1 (Program)


State 6

    3 ExtDefList: ExtDef • ExtDefList

    error   shift, and go to state 1
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    $end  reduce using rule 2 (ExtDefList)

    ExtDefList       go to state 14
    ExtDef           go to state 6
    Specifier        go to state 7
    StructSpecifier  go to state 8


State 7

    4 ExtDef: Specifier • FunDec CompSt
    5       | Specifier • SEMI
    6       | Specifier • ExtDecList SEMI

    ID    shift, and go to state 15
    SEMI  shift, and go to state 16

    ExtDecList  go to state 17
    VarDec      go to state 18
    FunDec      go to state 19


State 8

   11 Specifier: StructSpecifier •

    $default  reduce using rule 11 (Specifier)


State 9

    7 ExtDef: error SEMI •

    $default  reduce using rule 7 (ExtDef)


State 10

   15 OptTag: ID •
   16 Tag: ID •

    LC        reduce using rule 15 (OptTag)
    $default  reduce using rule 16 (Tag)


State 11

   13 StructSpecifier: STRUCT OptTag • LC DefList RC

    LC  shift, and go to state 20


State 12

   12 StructSpecifier: STRUCT Tag •

    $default  reduce using rule 12 (StructSpecifier)


State 13

    0 $accept: Program $end •

    $default  accept


State 14

    3 ExtDefList: ExtDef ExtDefList •

    $default  reduce using rule 3 (ExtDefList)


State 15

   17 VarDec: ID •
   19 FunDec: ID • LP RP
   20       | ID • LP VarList RP

    LP  shift, and go to state 21

    $default  reduce using rule 17 (VarDec)


State 16

    5 ExtDef: Specifier SEMI •

    $default  reduce using rule 5 (ExtDef)


State 17

    6 ExtDef: Specifier ExtDecList • SEMI

    SEMI  shift, and go to state 22


State 18

    8 ExtDecList: VarDec •
    9           | VarDec • COMMA ExtDecList
   18 VarDec: VarDec • LB INT RB

    COMMA  shift, and go to state 23
    LB     shift, and go to state 24

    $default  reduce using rule 8 (ExtDecList)


State 19

    4 ExtDef: Specifier FunDec • CompSt

    LC  shift, and go to state 25

    CompSt  go to state 26


State 20

   13 StructSpecifier: STRUCT OptTag LC • DefList RC

    error   shift, and go to state 27
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    RC  reduce using rule 25 (DefList)

    Specifier        go to state 28
    StructSpecifier  go to state 8
    DefList          go to state 29
    Def              go to state 30


State 21

   19 FunDec: ID LP • RP
   20       | ID LP • VarList RP

    TYPE    shift, and go to state 2
    RP      shift, and go to state 31
    STRUCT  shift, and go to state 3

    Specifier        go to state 32
    StructSpecifier  go to state 8
    VarList          go to state 33
    ParamDec         go to state 34


State 22

    6 ExtDef: Specifier ExtDecList SEMI •

    $default  reduce using rule 6 (ExtDef)


State 23

    9 ExtDecList: VarDec COMMA • ExtDecList

    ID  shift, and go to state 35

    ExtDecList  go to state 36
    VarDec      go to state 18


State 24

   18 VarDec: VarDec LB • INT RB

    INT  shift, and go to state 37


State 25

   24 CompSt: LC • DefList StmtList RC

    error   shift, and go to state 27
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    error   [reduce using rule 25 (DefList)]
    INT     reduce using rule 25 (DefList)
    FLOAT   reduce using rule 25 (DefList)
    ID      reduce using rule 25 (DefList)
    MINUS   reduce using rule 25 (DefList)
    NOT     reduce using rule 25 (DefList)
    LP      reduce using rule 25 (DefList)
    LC      reduce using rule 25 (DefList)
    RC      reduce using rule 25 (DefList)
    RETURN  reduce using rule 25 (DefList)
    IF      reduce using rule 25 (DefList)
    WHILE   reduce using rule 25 (DefList)

    Specifier        go to state 28
    StructSpecifier  go to state 8
    DefList          go to state 38
    Def              go to state 30


State 26

    4 ExtDef: Specifier FunDec CompSt •

    $default  reduce using rule 4 (ExtDef)


State 27

   28 Def: error • SEMI

    SEMI  shift, and go to state 39


State 28

   27 Def: Specifier • DecList SEMI

    ID  shift, and go to state 35

    VarDec   go to state 40
    DecList  go to state 41
    Dec      go to state 42


State 29

   13 StructSpecifier: STRUCT OptTag LC DefList • RC

    RC  shift, and go to state 43


State 30

   26 DefList: Def • DefList

    error   shift, and go to state 27
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    error   [reduce using rule 25 (DefList)]
    INT     reduce using rule 25 (DefList)
    FLOAT   reduce using rule 25 (DefList)
    ID      reduce using rule 25 (DefList)
    MINUS   reduce using rule 25 (DefList)
    NOT     reduce using rule 25 (DefList)
    LP      reduce using rule 25 (DefList)
    LC      reduce using rule 25 (DefList)
    RC      reduce using rule 25 (DefList)
    RETURN  reduce using rule 25 (DefList)
    IF      reduce using rule 25 (DefList)
    WHILE   reduce using rule 25 (DefList)

    Specifier        go to state 28
    StructSpecifier  go to state 8
    DefList          go to state 44
    Def              go to state 30


State 31

   19 FunDec: ID LP RP •

    $default  reduce using rule 19 (FunDec)


State 32

   23 ParamDec: Specifier • VarDec

    ID  shift, and go to state 35

    VarDec  go to state 45


State 33

   20 FunDec: ID LP VarList • RP

    RP  shift, and go to state 46


State 34

   21 VarList: ParamDec • COMMA VarList
   22        | ParamDec •

    COMMA  shift, and go to state 47

    $default  reduce using rule 22 (VarList)


State 35

   17 VarDec: ID •

    $default  reduce using rule 17 (VarDec)


State 36

    9 ExtDecList: VarDec COMMA ExtDecList •

    $default  reduce using rule 9 (ExtDecList)


State 37

   18 VarDec: VarDec LB INT • RB

    RB  shift, and go to state 48


State 38

   24 CompSt: LC DefList • StmtList RC

    error   shift, and go to state 49
    INT     shift, and go to state 50
    FLOAT   shift, and go to state 51
    ID      shift, and go to state 52
    MINUS   shift, and go to state 53
    NOT     shift, and go to state 54
    LP      shift, and go to state 55
    LC      shift, and go to state 25
    RETURN  shift, and go to state 56
    IF      shift, and go to state 57
    WHILE   shift, and go to state 58

    RC  reduce using rule 29 (StmtList)

    CompSt             go to state 59
    StmtList           go to state 60
    Stmt               go to state 61
    PrimaryExp         go to state 62
    PostfixExp         go to state 63
    UnaryExp           go to state 64
    MultiplicativeExp  go to state 65
    AdditiveExp        go to state 66
    RelationalExp      go to state 67
    LogicalAndExp      go to state 68
    LogicalOrExp       go to state 69
    AssignmentExp      go to state 70
    Exp                go to state 71


State 39

   28 Def: error SEMI •

    $default  reduce using rule 28 (Def)


State 40

   18 VarDec: VarDec • LB INT RB
   40 Dec: VarDec •
   41    | VarDec • ASSIGNOP AssignmentExp

    ASSIGNOP  shift, and go to state 72
    LB        shift, and go to state 24

    $default  reduce using rule 40 (Dec)


State 41

   27 Def: Specifier DecList • SEMI

    SEMI  shift, and go to state 73


State 42

   38 DecList: Dec •
   39        | Dec • COMMA DecList

    COMMA  shift, and go to state 74

    $default  reduce using rule 38 (DecList)


State 43

   13 StructSpecifier: STRUCT OptTag LC DefList RC •

    $default  reduce using rule 13 (StructSpecifier)


State 44

   26 DefList: Def DefList •

    $default  reduce using rule 26 (DefList)


State 45

   18 VarDec: VarDec • LB INT RB
   23 ParamDec: Specifier VarDec •

    LB  shift, and go to state 24

    $default  reduce using rule 23 (ParamDec)


State 46

   20 FunDec: ID LP VarList RP •

    $default  reduce using rule 20 (FunDec)


State 47

   21 VarList: ParamDec COMMA • VarList

    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    Specifier        go to state 32
    StructSpecifier  go to state 8
    VarList          go to state 75
    ParamDec         go to state 34


State 48

   18 VarDec: VarDec LB INT RB •

    $default  reduce using rule 18 (VarDec)


State 49

   37 Stmt: error • SEMI

    SEMI  shift, and go to state 76


State 50

   43 PrimaryExp: INT •

    $default  reduce using rule 43 (PrimaryExp)


State 51

   44 PrimaryExp: FLOAT •

    $default  reduce using rule 44 (PrimaryExp)


State 52

   42 PrimaryExp: ID •
   48 PostfixExp: ID • LP RP
   49           | ID • LP Args RP

    LP  shift, and go to state 77

    $default  reduce using rule 42 (PrimaryExp)


State 53

   52 UnaryExp: MINUS • UnaryExp

    INT    shift, and go to state 50
    FLOAT  shift, and go to state 51
    ID     shift, and go to state 52
    MINUS  shift, and go to state 53
    NOT    shift, and go to state 54
    LP     shift, and go to state 55

    PrimaryExp  go to state 62
    PostfixExp  go to state 63
    UnaryExp    go to state 78


State 54

   53 UnaryExp: NOT • UnaryExp

    INT    shift, and go to state 50
    FLOAT  shift, and go to state 51
    ID     shift, and go to state 52
    MINUS  shift, and go to state 53
    NOT    shift, and go to state 54
    LP     shift, and go to state 55

    PrimaryExp  go to state 62
    PostfixExp  go to state 63
    UnaryExp    go to state 79


State 55

   45 PrimaryExp: LP • Exp RP

    INT    shift, and go to state 50
    FLOAT  shift, and go to state 51
    ID     shift, and go to state 52
    MINUS  shift, and go to state 53
    NOT    shift, and go to state 54
    LP     shift, and go to state 55

    PrimaryExp         go to state 62
    PostfixExp         go to state 63
    UnaryExp           go to state 64
    MultiplicativeExp  go to state 65
    AdditiveExp        go to state 66
    RelationalExp      go to state 67
    LogicalAndExp      go to state 68
    LogicalOrExp       go to state 69
    AssignmentExp      go to state 70
    Exp                go to state 80


State 56

   33 Stmt: RETURN • Exp SEMI

    INT    shift, and go to state 50
    FLOAT  shift, and go to state 51
    ID     shift, and go to state 52
    MINUS  shift, and go to state 53
    NOT    shift, and go to state 54
    LP     shift, and go to state 55

    PrimaryExp         go to state 62
    PostfixExp         go to state 63
    UnaryExp           go to state 64
    MultiplicativeExp  go to state 65
    AdditiveExp        go to state 66
    RelationalExp      go to state 67
    LogicalAndExp      go to state 68
    LogicalOrExp       go to state 69
    AssignmentExp      go to state 70
    Exp                go to state 81


State 57

   34 Stmt: IF • LP Exp RP Stmt
   35     | IF • LP Exp RP Stmt ELSE Stmt

    LP  shift, and go to state 82


State 58

   36 Stmt: WHILE • LP Exp RP Stmt

    LP  shift, and go to state 83


State 59

   32 Stmt: CompSt •

    $default  reduce using rule 32 (Stmt)


State 60

   24 CompSt: LC DefList StmtList • RC

    RC  shift, and go to state 84


State 61

   30 StmtList: Stmt • StmtList

    error   shift, and go to state 49
    INT     shift, and go to state 50
    FLOAT   shift, and go to state 51
    ID      shift, and go to state 52
    MINUS   shift, and go to state 53
    NOT     shift, and go to state 54
    LP      shift, and go to state 55
    LC      shift, and go to state 25
    RETURN  shift, and go to state 56
    IF      shift, and go to state 57
    WHILE   shift, and go to state 58

    RC  reduce using rule 29 (StmtList)

    CompSt             go to state 59
    StmtList           go to state 85
    Stmt               go to state 61
    PrimaryExp         go to state 62
    PostfixExp         go to state 63
    UnaryExp           go to state 64
    MultiplicativeExp  go to state 65
    AdditiveExp        go to state 66
    RelationalExp      go to state 67
    LogicalAndExp      go to state 68
    LogicalOrExp       go to state 69
    AssignmentExp      go to state 70
    Exp                go to state 71


State 62

   46 PostfixExp: PrimaryExp •

    $default  reduce using rule 46 (PostfixExp)


State 63

   47 PostfixExp: PostfixExp • LB AssignmentExp RB
   50           | PostfixExp • DOT ID
   51 UnaryExp: PostfixExp •

    DOT  shift, and go to state 86
    LB   shift, and go to state 87

    $default  reduce using rule 51 (UnaryExp)


State 64

   54 MultiplicativeExp: UnaryExp •

    $default  reduce using rule 54 (MultiplicativeExp)


State 65

   55 MultiplicativeExp: MultiplicativeExp • STAR UnaryExp
   56                  | MultiplicativeExp • DIV UnaryExp
   57 AdditiveExp: MultiplicativeExp •

    STAR  shift, and go to state 88
    DIV   shift, and go to state 89

    $default  reduce using rule 57 (AdditiveExp)


State 66

   58 AdditiveExp: AdditiveExp • PLUS MultiplicativeExp
   59            | AdditiveExp • MINUS MultiplicativeExp
   60 RelationalExp: AdditiveExp •

    PLUS   shift, and go to state 90
    MINUS  shift, and go to state 91

    $default  reduce using rule 60 (RelationalExp)


State 67

   61 RelationalExp: RelationalExp • RELOP AdditiveExp
   62 LogicalAndExp: RelationalExp •

    RELOP  shift, and go to state 92

    $default  reduce using rule 62 (LogicalAndExp)


State 68

   63 LogicalAndExp: LogicalAndExp • AND RelationalExp
   64 LogicalOrExp: LogicalAndExp •

    AND  shift, and go to state 93

    $default  reduce using rule 64 (LogicalOrExp)


State 69

   65 LogicalOrExp: LogicalOrExp • OR LogicalAndExp
   66 AssignmentExp: LogicalOrExp •
   67              | LogicalOrExp • ASSIGNOP AssignmentExp

    ASSIGNOP  shift, and go to state 94
    OR        shift, and go to state 95

    $default  reduce using rule 66 (AssignmentExp)


State 70

   68 Exp: AssignmentExp •

    $default  reduce using rule 68 (Exp)


State 71

   31 Stmt: Exp • SEMI
   69 Exp: Exp • COMMA AssignmentExp

    SEMI   shift, and go to state 96
    COMMA  shift, and go to state 97


State 72

   41 Dec: VarDec ASSIGNOP • AssignmentExp

    INT    shift, and go to state 50
    FLOAT  shift, and go to state 51
    ID     shift, and go to state 52
    MINUS  shift, and go to state 53
    NOT    shift, and go to state 54
    LP     shift, and go to state 55

    PrimaryExp         go to state 62
    PostfixExp         go to state 63
    UnaryExp           go to state 64
    MultiplicativeExp  go to state 65
    AdditiveExp        go to state 66
    RelationalExp      go to state 67
    LogicalAndExp      go to state 68
    LogicalOrExp       go to state 69
    AssignmentExp      go to state 98


State 73

   27 Def: Specifier DecList SEMI •

    $default  reduce using rule 27 (Def)


State 74

   39 DecList: Dec COMMA • DecList

    ID  shift, and go to state 35

    VarDec   go to state 40
    DecList  go to state 99
    Dec      go to state 42


State 75

   21 VarList: ParamDec COMMA VarList •

    $default  reduce using rule 21 (VarList)


State 76

   37 Stmt: error SEMI •

    $default  reduce using rule 37 (Stmt)


State 77

   48 PostfixExp: ID LP • RP
   49           | ID LP • Args RP

    INT    shift, and go to state 50
    FLOAT  shift, and go to state 51
    ID     shift, and go to state 52
    MINUS  shift, and go to state 53
    NOT    shift, and go to state 54
    LP     shift, and go to state 55
    RP     shift, and go to state 100

    PrimaryExp         go to state 62
    PostfixExp         go to state 63
    UnaryExp           go to state 64
    MultiplicativeExp  go to state 65
    AdditiveExp        go to state 66
    RelationalExp      go to state 67
    LogicalAndExp      go to state 68
    LogicalOrExp       go to state 69
    AssignmentExp      go to state 70
    Exp                go to state 101
    Args               go to state 102


State 78

   52 UnaryExp: MINUS UnaryExp •

    $default  reduce using rule 52 (UnaryExp)


State 79

   53 UnaryExp: NOT UnaryExp •

    $default  reduce using rule 53 (UnaryExp)


State 80

   45 PrimaryExp: LP Exp • RP
   69 Exp: Exp • COMMA AssignmentExp

    COMMA  shift, and go to state 97
    RP     shift, and go to state 103


State 81

   33 Stmt: RETURN Exp • SEMI
   69 Exp: Exp • COMMA AssignmentExp

    SEMI   shift, and go to state 104
    COMMA  shift, and go to state 97


State 82

   34 Stmt: IF LP • Exp RP Stmt
   35     | IF LP • Exp RP Stmt ELSE Stmt

    INT    shift, and go to state 50
    FLOAT  shift, and go to state 51
    ID     shift, and go to state 52
    MINUS  shift, and go to state 53
    NOT    shift, and go to state 54
    LP     shift, and go to state 55

    PrimaryExp         go to state 62
    PostfixExp         go to state 63
    UnaryExp           go to state 64
    MultiplicativeExp  go to state 65
    AdditiveExp        go to state 66
    RelationalExp      go to state 67
    LogicalAndExp      go to state 68
    LogicalOrExp       go to state 69
    AssignmentExp      go to state 70
    Exp                go to state 105


State 83

   36 Stmt: WHILE LP • Exp RP Stmt

    INT    shift, and go to state 50
    FLOAT  shift, and go to state 51
    ID     shift, and go to state 52
    MINUS  shift, and go to state 53
    NOT    shift, and go to state 54
    LP     shift, and go to state 55

    PrimaryExp         go to state 62
    PostfixExp         go to state 63
    UnaryExp           go to state 64
    MultiplicativeExp  go to state 65
    AdditiveExp        go to state 66
    RelationalExp      go to state 67
    LogicalAndExp      go to state 68
    LogicalOrExp       go to state 69
    AssignmentExp      go to state 70
    Exp                go to state 106


State 84

   24 CompSt: LC DefList StmtList RC •

    $default  reduce using rule 24 (CompSt)


State 85

   30 StmtList: Stmt StmtList •

    $default  reduce using rule 30 (StmtList)


State 86

   50 PostfixExp: PostfixExp DOT • ID

    ID  shift, and go to state 107


State 87

   47 PostfixExp: PostfixExp LB • AssignmentExp RB

    INT    shift, and go to state 50
    FLOAT  shift, and go to state 51
    ID     shift, and go to state 52
    MINUS  shift, and go to state 53
    NOT    shift, and go to state 54
    LP     shift, and go to state 55

    PrimaryExp         go to state 62
    PostfixExp         go to state 63
    UnaryExp           go to state 64
    MultiplicativeExp  go to state 65
    AdditiveExp        go to state 66
    RelationalExp      go to state 67
    LogicalAndExp      go to state 68
    LogicalOrExp       go to state 69
    AssignmentExp      go to state 108


State 88

   55 MultiplicativeExp: MultiplicativeExp STAR • UnaryExp

    INT    shift, and go to state 50
    FLOAT  shift, and go to state 51
    ID     shift, and go to state 52
    MINUS  shift, and go to state 53
    NOT    shift, and go to state 54
    LP     shift, and go to state 55

    PrimaryExp  go to state 62
    PostfixExp  go to state 63
    UnaryExp    go to state 109


State 89

   56 MultiplicativeExp: MultiplicativeExp DIV • UnaryExp

    INT    shift, and go to state 50
    FLOAT  shift, and go to state 51
    ID     shift, and go to state 52
    MINUS  shift, and go to state 53
    NOT    shift, and go to state 54
    LP     shift, and go to state 55

    PrimaryExp  go to state 62
    PostfixExp  go to state 63
    UnaryExp    go to state 110


State 90

   58 AdditiveExp: AdditiveExp PLUS • MultiplicativeExp

    INT    shift, and go to state 50
    FLOAT  shift, and go to state 51
    ID     shift, and go to state 52
    MINUS  shift, and go to state 53
    NOT    shift, and go to state 54
    LP     shift, and go to state 55

    PrimaryExp         go to state 62
    PostfixExp         go to state 63
    UnaryExp           go to state 64
    MultiplicativeExp  go to state 111


State 91

   59 AdditiveExp: AdditiveExp MINUS • MultiplicativeExp

    INT    shift, and go to state 50
    FLOAT  shift, and go to state 51
    ID     shift, and go to state 52
    MINUS  shift, and go to state 53
    NOT    shift, and go to state 54
    LP     shift, and go to state 55

    PrimaryExp         go to state 62
    PostfixExp         go to state 63
    UnaryExp           go to state 64
    MultiplicativeExp  go to state 112


State 92

   61 RelationalExp: RelationalExp RELOP • AdditiveExp

    INT    shift, and go to state 50
    FLOAT  shift, and go to state 51
    ID     shift, and go to state 52
    MINUS  shift, and go to state 53
    NOT    shift, and go to state 54
    LP     shift, and go to state 55

    PrimaryExp         go to state 62
    PostfixExp         go to state 63
    UnaryExp           go to state 64
    MultiplicativeExp  go to state 65
    AdditiveExp        go to state 113


State 93

   63 LogicalAndExp: LogicalAndExp AND • RelationalExp

    INT    shift, and go to state 50
    FLOAT  shift, and go to state 51
    ID     shift, and go to state 52
    MINUS  shift, and go to state 53
    NOT    shift, and go to state 54
    LP     shift, and go to state 55

    PrimaryExp         go to state 62
    PostfixExp         go to state 63
    UnaryExp           go to state 64
    MultiplicativeExp  go to state 65
    AdditiveExp        go to state 66
    RelationalExp      go to state 114


State 94

   67 AssignmentExp: LogicalOrExp ASSIGNOP • AssignmentExp

    INT    shift, and go to state 50
    FLOAT  shift, and go to state 51
    ID     shift, and go to state 52
    MINUS  shift, and go to state 53
    NOT    shift, and go to state 54
    LP     shift, and go to state 55

    PrimaryExp         go to state 62
    PostfixExp         go to state 63
    UnaryExp           go to state 64
    MultiplicativeExp  go to state 65
    AdditiveExp        go to state 66
    RelationalExp      go to state 67
    LogicalAndExp      go to state 68
    LogicalOrExp       go to state 69
    AssignmentExp      go to state 115


State 95

   65 LogicalOrExp: LogicalOrExp OR • LogicalAndExp

    INT    shift, and go to state 50
    FLOAT  shift, and go to state 51
    ID     shift, and go to state 52
    MINUS  shift, and go to state 53
    NOT    shift, and go to state 54
    LP     shift, and go to state 55

    PrimaryExp         go to state 62
    PostfixExp         go to state 63
    UnaryExp           go to state 64
    MultiplicativeExp  go to state 65
    AdditiveExp        go to state 66
    RelationalExp      go to state 67
    LogicalAndExp      go to state 116


State 96

   31 Stmt: Exp SEMI •

    $default  reduce using rule 31 (Stmt)


State 97

   69 Exp: Exp COMMA • AssignmentExp

    INT    shift, and go to state 50
    FLOAT  shift, and go to state 51
    ID     shift, and go to state 52
    MINUS  shift, and go to state 53
    NOT    shift, and go to state 54
    LP     shift, and go to state 55

    PrimaryExp         go to state 62
    PostfixExp         go to state 63
    UnaryExp           go to state 64
    MultiplicativeExp  go to state 65
    AdditiveExp        go to state 66
    RelationalExp      go to state 67
    LogicalAndExp      go to state 68
    LogicalOrExp       go to state 69
    AssignmentExp      go to state 117


State 98

   41 Dec: VarDec ASSIGNOP AssignmentExp •

    $default  reduce using rule 41 (Dec)


State 99

   39 DecList: Dec COMMA DecList •

    $default  reduce using rule 39 (DecList)


State 100

   48 PostfixExp: ID LP RP •

    $default  reduce using rule 48 (PostfixExp)


State 101

   69 Exp: Exp • COMMA AssignmentExp
   70 Args: Exp • COMMA Args
   71     | Exp •

    COMMA  shift, and go to state 118

    $default  reduce using rule 71 (Args)


State 102

   49 PostfixExp: ID LP Args • RP

    RP  shift, and go to state 119


State 103

   45 PrimaryExp: LP Exp RP •

    $default  reduce using rule 45 (PrimaryExp)


State 104

   33 Stmt: RETURN Exp SEMI •

    $default  reduce using rule 33 (Stmt)


State 105

   34 Stmt: IF LP Exp • RP Stmt
   35     | IF LP Exp • RP Stmt ELSE Stmt
   69 Exp: Exp • COMMA AssignmentExp

    COMMA  shift, and go to state 97
    RP     shift, and go to state 120


State 106

   36 Stmt: WHILE LP Exp • RP Stmt
   69 Exp: Exp • COMMA AssignmentExp

    COMMA  shift, and go to state 97
    RP     shift, and go to state 121


State 107

   50 PostfixExp: PostfixExp DOT ID •

    $default  reduce using rule 50 (PostfixExp)


State 108

   47 PostfixExp: PostfixExp LB AssignmentExp • RB

    RB  shift, and go to state 122


State 109

   55 MultiplicativeExp: MultiplicativeExp STAR UnaryExp •

    $default  reduce using rule 55 (MultiplicativeExp)


State 110

   56 MultiplicativeExp: MultiplicativeExp DIV UnaryExp •

    $default  reduce using rule 56 (MultiplicativeExp)


State 111

   55 MultiplicativeExp: MultiplicativeExp • STAR UnaryExp
   56                  | MultiplicativeExp • DIV UnaryExp
   58 AdditiveExp: AdditiveExp PLUS MultiplicativeExp •

    STAR  shift, and go to state 88
    DIV   shift, and go to state 89

    $default  reduce using rule 58 (AdditiveExp)


State 112

   55 MultiplicativeExp: MultiplicativeExp • STAR UnaryExp
   56                  | MultiplicativeExp • DIV UnaryExp
   59 AdditiveExp: AdditiveExp MINUS MultiplicativeExp •

    STAR  shift, and go to state 88
    DIV   shift, and go to state 89

    $default  reduce using rule 59 (AdditiveExp)


State 113

   58 AdditiveExp: AdditiveExp • PLUS MultiplicativeExp
   59            | AdditiveExp • MINUS MultiplicativeExp
   61 RelationalExp: RelationalExp RELOP AdditiveExp •

    PLUS   shift, and go to state 90
    MINUS  shift, and go to state 91

    $default  reduce using rule 61 (RelationalExp)


State 114

   61 RelationalExp: RelationalExp • RELOP AdditiveExp
   63 LogicalAndExp: LogicalAndExp AND RelationalExp •

    RELOP  shift, and go to state 92

    $default  reduce using rule 63 (LogicalAndExp)


State 115

   67 AssignmentExp: LogicalOrExp ASSIGNOP AssignmentExp •

    $default  reduce using rule 67 (AssignmentExp)


State 116

   63 LogicalAndExp: LogicalAndExp • AND RelationalExp
   65 LogicalOrExp: LogicalOrExp OR LogicalAndExp •

    AND  shift, and go to state 93

    $default  reduce using rule 65 (LogicalOrExp)


State 117

   69 Exp: Exp COMMA AssignmentExp •

    $default  reduce using rule 69 (Exp)


State 118

   69 Exp: Exp COMMA • AssignmentExp
   70 Args: Exp COMMA • Args

    INT    shift, and go to state 50
    FLOAT  shift, and go to state 51
    ID     shift, and go to state 52
    MINUS  shift, and go to state 53
    NOT    shift, and go to state 54
    LP     shift, and go to state 55

    PrimaryExp         go to state 62
    PostfixExp         go to state 63
    UnaryExp           go to state 64
    MultiplicativeExp  go to state 65
    AdditiveExp        go to state 66
    RelationalExp      go to state 67
    LogicalAndExp      go to state 68
    LogicalOrExp       go to state 69
    AssignmentExp      go to state 123
    Exp                go to state 101
    Args               go to state 124


State 119

   49 PostfixExp: ID LP Args RP •

    $default  reduce using rule 49 (PostfixExp)


State 120

   34 Stmt: IF LP Exp RP • Stmt
   35     | IF LP Exp RP • Stmt ELSE Stmt

    error   shift, and go to state 49
    INT     shift, and go to state 50
    FLOAT   shift, and go to state 51
    ID      shift, and go to state 52
    MINUS   shift, and go to state 53
    NOT     shift, and go to state 54
    LP      shift, and go to state 55
    LC      shift, and go to state 25
    RETURN  shift, and go to state 56
    IF      shift, and go to state 57
    WHILE   shift, and go to state 58

    CompSt             go to state 59
    Stmt               go to state 125
    PrimaryExp         go to state 62
    PostfixExp         go to state 63
    UnaryExp           go to state 64
    MultiplicativeExp  go to state 65
    AdditiveExp        go to state 66
    RelationalExp      go to state 67
    LogicalAndExp      go to state 68
    LogicalOrExp       go to state 69
    AssignmentExp      go to state 70
    Exp                go to state 71


State 121

   36 Stmt: WHILE LP Exp RP • Stmt

    error   shift, and go to state 49
    INT     shift, and go to state 50
    FLOAT   shift, and go to state 51
    ID      shift, and go to state 52
    MINUS   shift, and go to state 53
    NOT     shift, and go to state 54
    LP      shift, and go to state 55
    LC      shift, and go to state 25
    RETURN  shift, and go to state 56
    IF      shift, and go to state 57
    WHILE   shift, and go to state 58

    CompSt             go to state 59
    Stmt               go to state 126
    PrimaryExp         go to state 62
    PostfixExp         go to state 63
    UnaryExp           go to state 64
    MultiplicativeExp  go to state 65
    AdditiveExp        go to state 66
    RelationalExp      go to state 67
    LogicalAndExp      go to state 68
    LogicalOrExp       go to state 69
    AssignmentExp      go to state 70
    Exp                go to state 71


State 122

   47 PostfixExp: PostfixExp LB AssignmentExp RB •

    $default  reduce using rule 47 (PostfixExp)


State 123

   68 Exp: AssignmentExp •
   69    | Exp COMMA AssignmentExp •

    COMMA     reduce using rule 68 (Exp)
    COMMA     [reduce using rule 69 (Exp)]
    RP        reduce using rule 68 (Exp)
    RP        [reduce using rule 69 (Exp)]
    $default  reduce using rule 68 (Exp)


State 124

   70 Args: Exp COMMA Args •

    $default  reduce using rule 70 (Args)


State 125

   34 Stmt: IF LP Exp RP Stmt •
   35     | IF LP Exp RP Stmt • ELSE Stmt

    ELSE  shift, and go to state 127

    ELSE      [reduce using rule 34 (Stmt)]
    $default  reduce using rule 34 (Stmt)


State 126

   36 Stmt: WHILE LP Exp RP Stmt •

    $default  reduce using rule 36 (Stmt)


State 127

   35 Stmt: IF LP Exp RP Stmt ELSE • Stmt

    error   shift, and go to state 49
    INT     shift, and go to state 50
    FLOAT   shift, and go to state 51
    ID      shift, and go to state 52
    MINUS   shift, and go to state 53
    NOT     shift, and go to state 54
    LP      shift, and go to state 55
    LC      shift, and go to state 25
    RETURN  shift, and go to state 56
    IF      shift, and go to state 57
    WHILE   shift, and go to state 58

    CompSt             go to state 59
    Stmt               go to state 128
    PrimaryExp         go to state 62
    PostfixExp         go to state 63
    UnaryExp           go to state 64
    MultiplicativeExp  go to state 65
    AdditiveExp        go to state 66
    RelationalExp      go to state 67
    LogicalAndExp      go to state 68
    LogicalOrExp       go to state 69
    AssignmentExp      go to state 70
    Exp                go to state 71


State 128

   35 Stmt: IF LP Exp RP Stmt ELSE Stmt •

    $default  reduce using rule 35 (Stmt)
